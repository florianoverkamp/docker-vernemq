#!/bin/bash

SELF_IP="127.0.0.1"
LISTEN_IP="0.0.0.0"
MIN_NODES_SIZE="${MIN_NODES_SIZE:-3}"
SSL_AUTH="${SSL_AUTH:-"no"}"
SSL_CA="${SSL_CA:-"/run/secrets/mqtt_ca_cert"}"
SSL_CERT="${SSL_CERT:-"/run/secrets/mqtt_server_cert"}"
SSL_KEY="${SSL_KEY:-"/run/secrets/mqtt_server_key"}"
DISCOVERY_NAME="${DISCOVERY_NAME:-"tasks.$SERVICE_NAME"}"
if [[ "$SSL_AUTH" == "yes" ]]; then
  export SSL_AUTH
fi
if [[ -n "$SERVICE_NAME" ]]; then
  echo "service name given: $SERVICE_NAME - we are running in cluster mode"
  # wait for all nodes to appear
  SELF_IP=""
  number_of_nodes=1
  while [[ "$SELF_IP" == "" ]]; do
    SELF_IP=$(dig +short $(hostname))
    sleep 1
  done
  while [[ $number_of_nodes -lt ${MIN_NODES_SIZE} ]]; do
    sleep 1
    NODES=$(dig +short ${DISCOVERY_NAME} | sort)
    number_of_nodes=$(( $(echo $NODES | grep -o '\s' | wc -l) + 1 )) >/dev/null
    echo "we found $number_of_nodes nodes behind '${DISCOVERY_NAME}'"
  done
  echo "self ip: $SELF_IP"
  export NODES
fi
export SELF_IP
export LISTEN_IP
render.py /etc/vernemq/vm.args.j2 > /etc/vernemq/vm.args
render.py /etc/vernemq/vernemq.conf.j2 > /etc/vernemq/vernemq.conf
/usr/share/vernemq/bin/vernemq config generate | grep error
if [ $? -ne 1 ]; then
    echo "configuration error, exit"
    echo "$(cat /usr/share/vernemq/bin/../etc/vernemq.conf)"
    exit 1
fi

pid=0

# SIGTERM-handler
# https://github.com/erlio/docker-vernemq/blob/master/bin/vernemq.sh
sigterm_handler() {
  echo starting shutdown
  /usr/share/vernemq/bin/vmq-admin cluster leave node=VerneMQ@$SELF_IP -k
  kill $pid
}


echo "config:"
cat /etc/vernemq/vernemq.conf | while read line; do echo -e "\t$line"; done

trap 'sigterm_handler' 15
/usr/share/vernemq/bin/vernemq console &
pid=$!
# we do that to catch SIGTERM
wait
